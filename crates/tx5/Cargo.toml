[package]
name = "tx5"
version.workspace = true
edition.workspace = true
description = "The main holochain tx5 webrtc networking crate"
license = "MIT OR Apache-2.0"
repository = "https://github.com/holochain/tx5"
documentation = "https://docs.rs/tx5"
authors = [ "Holochain Core Dev Team <devcore@holochain.org>" ]
keywords = ["holochain", "holo", "p2p", "webrtc", "networking"]
categories = ["network-programming"]

[features]
default = [ "backend-libdatachannel", "datachannel-vendored" ]

# use the libdatachannel crate as the webrtc backend
backend-libdatachannel = [ "tx5-connection/backend-libdatachannel" ]

# vendor the datachannel library
datachannel-vendored = [ "tx5-connection/datachannel-vendored" ]

# use the tx5-go-pion crate as the webrtc backend
backend-go-pion = [ "tx5-connection/backend-go-pion" ]

# use the webrtc-rs crate as the webrtc backend
backend-webrtc-rs = [ "tx5-connection/backend-webrtc-rs" ]

# make a schema available for configuration types
schema = [ "tx5-connection/schema" ]

# enable some testing utility apis
test_utils = [ "tx5-connection/test_utils" ]

[dependencies]
base64 = { workspace = true }
futures = { workspace = true }
influxive-otel-atomic-obs = { workspace = true }
serde = { workspace = true }
slab = { workspace = true }
tokio = { workspace = true, features = [ "full" ] }
tracing = { workspace = true }
tx5-connection = { workspace = true, default-features = false }
tx5-core = { workspace = true }
url = { workspace = true }

[dev-dependencies]
criterion = { workspace = true }
futures = { workspace = true }
sbd-server = { workspace = true }
serde_json = { workspace = true }
tracing-subscriber = { workspace = true }
tx5 = { path = ".", features = [ "test_utils" ] }

[[bench]]
name = "throughput"
harness = false
